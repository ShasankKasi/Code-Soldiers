name: CI/CD Deploy to EC2

on:
  push:
    branches:
      - "main"

jobs:
  # Build Frontend Image only when frontend changes
  build-frontend:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v3

      - name: Detect changes in frontend
        id: frontend-changes
        uses: tj-actions/changed-files@v45
        with:
          files: frontend/**

      - name: Login to DockerHub
        if: steps.frontend-changes.outputs.any_changed == 'true'
        uses: docker/login-action@v2
        with:
          username: ${{ secrets.DOCKER_USERNAME }}
          password: ${{ secrets.DOCKER_PASSWORD }}

      - name: Build and push frontend image
        if: steps.frontend-changes.outputs.any_changed == 'true'
        run: |
          docker build -t ${{ secrets.DOCKER_USERNAME }}/frontend:latest ./frontend
          docker push ${{ secrets.DOCKER_USERNAME }}/frontend:latest

      - name: Set output
        id: result
        run: echo "changed=${{ steps.frontend-changes.outputs.any_changed }}" >> $GITHUB_OUTPUT

  # Build Backend Image only when backend changes
  build-backend:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v3

      - name: Detect changes in backend
        id: backend-changes
        uses: tj-actions/changed-files@v45
        with:
          files: backend/**

      - name: Login to DockerHub
        if: steps.backend-changes.outputs.any_changed == 'true'
        uses: docker/login-action@v2
        with:
          username: ${{ secrets.DOCKER_USERNAME }}
          password: ${{ secrets.DOCKER_PASSWORD }}

      - name: Build and push backend image
        if: steps.backend-changes.outputs.any_changed == 'true'
        run: |
          docker build -t ${{ secrets.DOCKER_USERNAME }}/backend:latest ./backend
          docker push ${{ secrets.DOCKER_USERNAME }}/backend:latest

      - name: Set output
        id: result
        run: echo "changed=${{ steps.backend-changes.outputs.any_changed }}" >> $GITHUB_OUTPUT

  # Deploy only if frontend OR backend changed
  deploy:
    runs-on: ubuntu-latest
    needs: [build-frontend, build-backend]
    if: needs.build-frontend.outputs.result_changed == 'true' || needs.build-backend.outputs.result_changed == 'true'
    steps:
      - name: Checkout code
        uses: actions/checkout@v3

      - name: Create .env on EC2
        uses: appleboy/ssh-action@v0.1.10
        with:
          host: ${{ secrets.EC2_HOST }}
          username: ${{ secrets.EC2_USER }}
          key: ${{ secrets.EC2_SSH_KEY }}
          script: |
            mkdir -p ~/app
            echo "DOCKER_USERNAME=${{ secrets.DOCKER_USERNAME }}" > ~/app/.env

      - name: Copy docker-compose.yml to EC2
        uses: appleboy/scp-action@v0.1.7
        with:
          host: ${{ secrets.EC2_HOST }}
          username: ${{ secrets.EC2_USER }}
          key: ${{ secrets.EC2_SSH_KEY }}
          source: "docker-compose.yml"
          target: "~/app/"

      - name: Deploy on EC2
        uses: appleboy/ssh-action@v0.1.10
        with:
          host: ${{ secrets.EC2_HOST }}
          username: ${{ secrets.EC2_USER }}
          key: ${{ secrets.EC2_SSH_KEY }}
          script: |
            cd ~/app
            sudo docker-compose pull
            sudo docker-compose up -d
            sudo docker image prune -f
